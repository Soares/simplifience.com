// Generated by CoffeeScript 1.4.0
(function() {
  var create;

  $(function() {
    return $('.unroll-radius').each(create);
  });

  create = function() {
    var begin, circle, circumference, fadeIn, fadeOut, height, laid, middle, outline, padding, paper, radine, radius, reset, roll, startx, starty, turns, width;
    width = 500;
    height = 200;
    paper = util.paperFor(this, width, height);
    radius = 45;
    circumference = Ï„ * radius;
    middle = height / 2;
    padding = 15;
    startx = padding + radius;
    starty = middle + radius;
    Raphael.g.axis(startx, starty, 8 * radius, 0, 8, 8, null, 0, 't', null, paper);
    circle = paper.circle();
    outline = paper.path().attr('stroke-width', 2);
    laid = paper.path().attr('stroke-width', 2);
    radine = paper.path().attr('stroke-width', 1);
    turns = paper.text(width - 2 * radius, radius, 0..toFixed(6));
    reset = function() {
      circle.attr({
        cx: startx,
        cy: middle,
        r: radius,
        opacity: 0,
        'stroke-width': 2
      });
      outline.attr({
        circ: [startx, middle, radius, 1, -1 / 4],
        opacity: 0
      });
      laid.attr({
        path: new util.Path(startx, starty).draw(0.01, 0).string
      });
      radine.attr({
        turn: [startx, starty, radius, 0],
        opacity: 1
      });
      return turns.attr({
        turns: 0..toFixed(6),
        opacity: 0
      });
    };
    begin = function() {
      reset();
      return radine.animate({
        turn: [startx, starty, radius, 1 / 4]
      }, 1000, '<>', fadeIn);
    };
    fadeIn = function() {
      var a;
      radine.attr({
        turn: [startx, middle, radius, -1 / 4]
      });
      a = circle.animate({
        opacity: 1
      }, 1000, '<', roll);
      return turns.animateWith(circle, a, {
        opacity: 1
      }, 1000, '<', roll);
    };
    roll = function() {
      var a;
      circle.attr({
        'stroke-width': 0
      });
      outline.attr({
        opacity: 1
      });
      laid.attr({
        opacity: 1
      });
      a = circle.animate({
        cx: startx + circumference
      }, 5000, '<>', function() {
        return setTimeout(fadeOut, 3000);
      });
      radine.animateWith(circle, a, {
        turn: [startx + circumference, middle, radius, -5 / 4]
      }, 5000, '<>');
      outline.animateWith(circle, a, {
        circ: [startx + circumference, middle, radius, 0, -1 / 4]
      }, 5000, '<>');
      laid.animateWith(circle, a, {
        path: new util.Path(startx, starty).draw(circumference, 0).string
      }, 5000, '<>');
      return turns.animateWith(circle, a, {
        turns: 1
      }, 5000, '<>');
    };
    fadeOut = function() {
      var a;
      a = circle.animate({
        opacity: 0
      }, 1000, '<', function() {
        return setTimeout(begin, 1000);
      });
      laid.animateWith(circle, a, {
        opacity: 0
      }, 1000, '<');
      radine.animateWith(circle, a, {
        opacity: 0
      }, 1000, '<');
      return turns.animateWith(circle, a, {
        opacity: 0
      }, 1000, '<');
    };
    reset();
    return setTimeout(begin, 3000);
  };

}).call(this);
